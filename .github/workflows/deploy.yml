name: Deploy Aice PS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          # 可选：如需在前端打包时注入默认 key（注意会暴露在前端）
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Provision server (nginx, firewall, dir, ssl via acme.sh)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            set -e
            DOMAIN="${{ secrets.SERVER_DOMAIN }}"
            EMAIL="${{ secrets.ACME_CONTACT_EMAIL }}"
            [ -z "$DOMAIN" ] && { echo "SERVER_DOMAIN secret 未设置"; exit 1; }
            APEX_DOMAIN=$(echo "$DOMAIN" | sed -E 's/^www\.//')

            mkdir -p /var/www/aice-ps
            mkdir -p /etc/nginx/ssl

            # 安装 Nginx（根据系统包管理器自动选择）并开放端口
            if command -v apt-get >/dev/null 2>&1; then
              DEBIAN_FRONTEND=noninteractive apt-get update -y
              DEBIAN_FRONTEND=noninteractive apt-get install -y nginx curl socat sed
              systemctl enable nginx || true
              if command -v ufw >/dev/null 2>&1; then
                ufw allow 80/tcp || true
                ufw allow 443/tcp || true
              fi
            elif command -v yum >/dev/null 2>&1; then
              yum install -y nginx curl socat sed || true
              systemctl enable nginx || true
              if command -v firewall-cmd >/dev/null 2>&1; then
                firewall-cmd --add-service=http --permanent || true
                firewall-cmd --add-service=https --permanent || true
                firewall-cmd --reload || true
              fi
            elif command -v dnf >/dev/null 2>&1; then
              dnf install -y nginx curl socat sed || true
              systemctl enable nginx || true
              if command -v firewall-cmd >/dev/null 2>&1; then
                firewall-cmd --add-service=http --permanent || true
                firewall-cmd --add-service=https --permanent || true
                firewall-cmd --reload || true
              fi
            fi

            # 选择 Nginx 配置路径
            if [ -d /etc/nginx/conf.d ]; then
              NGINX_CONF="/etc/nginx/conf.d/aice-ps.conf"
            else
              mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled || true
              NGINX_CONF="/etc/nginx/sites-available/aice-ps"
              ln -sf /etc/nginx/sites-available/aice-ps /etc/nginx/sites-enabled/aice-ps || true
            fi

            # 第一阶段：仅 HTTP 配置，保证 nginx 可用，供 ACME 校验
            cat > "$NGINX_CONF" <<'EOF'
            server {
              listen 80;
              server_name __DOMAIN__ __APEX__;

              root /var/www/aice-ps;
              index index.html;

              # 允许较大的请求体，便于图片上传/处理
              client_max_body_size 32m;

              # 反向代理到 Google Gemini，供前端通过同域访问
              location /genai/ {
                proxy_pass https://generativelanguage.googleapis.com/;
                proxy_set_header Host generativelanguage.googleapis.com;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_http_version 1.1;
                proxy_ssl_server_name on;
                proxy_read_timeout 300s;
                proxy_connect_timeout 60s;
                proxy_send_timeout 300s;
              }

              location ^~ /.well-known/acme-challenge/ {
                root /var/www/aice-ps;
                default_type "text/plain";
                allow all;
              }

              location / {
                try_files $uri $uri/ /index.html;
              }
            }
            EOF
            sed -i "s/__DOMAIN__/$DOMAIN/g" "$NGINX_CONF"
            sed -i "s/__APEX__/$APEX_DOMAIN/g" "$NGINX_CONF"
            nginx -t
            systemctl restart nginx || service nginx restart || true

            # 安装 acme.sh（若未安装），并使用 webroot 为两个域名签发证书
            if [ ! -d "$HOME/.acme.sh" ]; then
              curl -s https://get.acme.sh | sh -s email=${EMAIL:-admin@${APEX_DOMAIN}}
              export PATH="$HOME/.acme.sh:$PATH"
            fi
            if [ -f "$HOME/.acme.sh/acme.sh" ]; then
              export PATH="$HOME/.acme.sh:$PATH"
              acme.sh --set-default-ca --server letsencrypt || true
              acme.sh --issue --webroot /var/www/aice-ps -d "$DOMAIN" -d "$APEX_DOMAIN" || true
              acme.sh --install-cert -d "$DOMAIN" \
                --key-file       /etc/nginx/ssl/${DOMAIN}.key \
                --fullchain-file /etc/nginx/ssl/${DOMAIN}.crt \
                --reloadcmd     "nginx -t && (systemctl reload nginx || service nginx reload || true)" || true
            else
              echo "acme.sh 未安装成功，跳过证书签发"
            fi

            # 第二阶段：启用 HTTPS + 强制跳转
            cat > "$NGINX_CONF" <<'EOF'
            # HTTP server: 仅用于 ACME 校验与 301 跳转
            server {
              listen 80;
              server_name __DOMAIN__ __APEX__;

              root /var/www/aice-ps;
              index index.html;

              # 允许较大的请求体
              client_max_body_size 32m;

              # 反向代理到 Google Gemini（在 HTTP 阶段仅用于 ACME 校验及跳转前的直连调试）
              location /genai/ {
                proxy_pass https://generativelanguage.googleapis.com/;
                proxy_set_header Host generativelanguage.googleapis.com;
                proxy_set_header X-Forwarded-For $server_addr;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_http_version 1.1;
                proxy_ssl_server_name on;
                proxy_read_timeout 300s;
                proxy_connect_timeout 60s;
                proxy_send_timeout 300s;
              }

              location ^~ /.well-known/acme-challenge/ {
                root /var/www/aice-ps;
                default_type "text/plain";
                allow all;
              }

              location / {
                return 301 https://$host$request_uri;
              }
            }

            # HTTPS server
            server {
              listen 443 ssl;
              server_name __DOMAIN__ __APEX__;
              http2 on;

              ssl_certificate     /etc/nginx/ssl/__DOMAIN__.crt;
              ssl_certificate_key /etc/nginx/ssl/__DOMAIN__.key;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers HIGH:!aNULL:!MD5;

              root /var/www/aice-ps;
              index index.html;

              # 允许较大的请求体，便于图片上传/处理
              client_max_body_size 32m;

              # 反向代理到 Google Gemini，供前端通过同域访问
              location /genai/ {
                proxy_pass https://generativelanguage.googleapis.com/;
                proxy_set_header Host generativelanguage.googleapis.com;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_http_version 1.1;
                proxy_ssl_server_name on;
                proxy_read_timeout 300s;
                proxy_connect_timeout 60s;
                proxy_send_timeout 300s;
              }

              location / {
                try_files $uri $uri/ /index.html;
              }
            }
            EOF
            sed -i "s/__DOMAIN__/$DOMAIN/g" "$NGINX_CONF"
            sed -i "s/__APEX__/$APEX_DOMAIN/g" "$NGINX_CONF"
            nginx -t
            systemctl restart nginx || service nginx restart || true

      - name: Cleanup old static files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            set -e
            mkdir -p /var/www/aice-ps
            find /var/www/aice-ps -mindepth 1 -maxdepth 1 -exec rm -rf {} +

      - name: Upload dist to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "dist/**"
          target: "/var/www/aice-ps"
          strip_components: 1

      - name: Debug remote state
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            set -e
            echo "== ls -la /var/www/aice-ps =="
            ls -la /var/www/aice-ps || true
            echo "== head index.html =="
            head -n 20 /var/www/aice-ps/index.html || true
            echo "== nginx -T (grep aice-ps) =="
            nginx -T 2>/dev/null | sed -n '/aice-ps/,/}/p' || true

      - name: Fix ownership, permissions and SELinux context
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            set -e
            # 统一属主为 nginx 运行用户
            NGINX_USER=$(id -u www-data >/dev/null 2>&1 && echo www-data || echo nginx)
            chown -R $NGINX_USER:$NGINX_USER /var/www/aice-ps
            find /var/www/aice-ps -type d -exec chmod 755 {} +
            find /var/www/aice-ps -type f -exec chmod 644 {} +

            # 若启用 SELinux，设置正确的安全上下文
            if command -v selinuxenabled >/dev/null 2>&1 && selinuxenabled; then
              if command -v semanage >/dev/null 2>&1; then
                semanage fcontext -a -t httpd_sys_content_t "/var/www/aice-ps(/.*)?" || true
              else
                # 某些系统 semanage 未装，尝试安装
                if command -v yum >/dev/null 2>&1; then
                  yum install -y policycoreutils-python-utils || yum install -y policycoreutils-python || true
                elif command -v dnf >/dev/null 2>&1; then
                  dnf install -y policycoreutils-python-utils || true
                elif command -v apt-get >/dev/null 2>&1; then
                  apt-get update -y && apt-get install -y policycoreutils || true
                fi
                command -v semanage >/dev/null 2>&1 && semanage fcontext -a -t httpd_sys_content_t "/var/www/aice-ps(/.*)?" || true
              fi
              restorecon -Rv /var/www/aice-ps || true
            fi

      - name: Validate and restart Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            set -e
            nginx -t
            systemctl restart nginx || service nginx restart || true 